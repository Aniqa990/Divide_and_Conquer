"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/ClosestPair.js":
/*!****************************!*\
  !*** ./app/ClosestPair.js ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Home)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3 */ \"(app-pages-browser)/./node_modules/d3/src/index.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nconst duration = 1200;\nfunction Home() {\n    _s();\n    const [points, setPoints] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const svgRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [isPaused, setIsPaused] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const svgWidth = 800;\n    const svgHeight = 600;\n    const margin = {\n        top: 20,\n        right: 40,\n        bottom: 20,\n        left: 40\n    };\n    let xScale;\n    let yScale;\n    const handleFileUpload = (e)=>{\n        const file = e.target.files[0];\n        const reader = new FileReader();\n        reader.onload = (event)=>{\n            const content = event.target.result;\n            const parsedPoints = content.trim().split('\\n').map((line)=>{\n                const [x, y] = line.split(',').map(Number);\n                return {\n                    x,\n                    y\n                };\n            });\n            setPoints(parsedPoints);\n            drawPoints(parsedPoints);\n        };\n        reader.readAsText(file);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Home.useEffect\": ()=>{\n            const svg = d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current);\n            svg.append('g').attr('id', 'axes'); // For drawing axes\n        }\n    }[\"Home.useEffect\"], []);\n    const clearButtonClicked = ()=>{\n        setPoints([]);\n        d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current).selectAll(\"*\").remove();\n    };\n    const togglePause = ()=>{\n        setIsPaused(!isPaused);\n    };\n    const drawPoints = (points)=>{\n        const svg = d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current);\n        svg.selectAll('.point').remove();\n        svg.selectAll('#axes').selectAll(\"*\").remove(); // Clear previous axes\n        // Get min and max values for x and y\n        const xExtent = d3__WEBPACK_IMPORTED_MODULE_2__.extent(points, (d)=>d.x);\n        const yExtent = d3__WEBPACK_IMPORTED_MODULE_2__.extent(points, (d)=>d.y);\n        // Define scales\n        xScale = d3__WEBPACK_IMPORTED_MODULE_2__.scaleLinear().domain([\n            xExtent[0] - 10,\n            xExtent[1] + 10\n        ]) // Add padding\n        .range([\n            margin.left,\n            svgWidth - margin.right\n        ]);\n        yScale = d3__WEBPACK_IMPORTED_MODULE_2__.scaleLinear().domain([\n            yExtent[0] - 10,\n            yExtent[1] + 10\n        ]) // Add padding\n        .range([\n            svgHeight - margin.bottom,\n            margin.top\n        ]);\n        // Draw axes\n        const xAxis = d3__WEBPACK_IMPORTED_MODULE_2__.axisBottom(xScale);\n        const yAxis = d3__WEBPACK_IMPORTED_MODULE_2__.axisLeft(yScale);\n        svg.select('#axes').append('g').attr('transform', \"translate(0,\".concat(svgHeight - margin.bottom, \")\")).call(xAxis);\n        svg.select('#axes').append('g').attr('transform', \"translate(\".concat(margin.left, \",0)\")).call(yAxis);\n        // Plot points with scaling applied\n        svg.selectAll('circle').data(points).enter().append('circle').attr('cx', (d)=>xScale(d.x)).attr('cy', (d)=>yScale(d.y)).attr('r', 3).attr('class', 'point').attr('data-x', (d)=>d.x).attr('data-y', (d)=>d.y).on('mouseover', function(event, d) {\n            showTooltip(event, d);\n        }).on('mouseout', hideTooltip);\n    };\n    const showTooltip = (event, point)=>{\n        const tooltip = d3__WEBPACK_IMPORTED_MODULE_2__.select('#tooltip');\n        tooltip.transition().duration(200).style('opacity', 1);\n        tooltip.html(\"(\".concat(point.x.toFixed(2), \", \").concat(point.y.toFixed(2), \")\")).style('left', \"\".concat(event.pageX + 5, \"px\")).style('top', \"\".concat(event.pageY + 5, \"px\"));\n    };\n    const hideTooltip = ()=>{\n        d3__WEBPACK_IMPORTED_MODULE_2__.select('#tooltip').transition().duration(200).style('opacity', 0);\n    };\n    const runButtonClicked = ()=>{\n        run();\n    };\n    const run = ()=>{\n        d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current).selectAll('.pair-line').remove();\n        d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current).selectAll('.division-line').remove();\n        const pointsX = points.slice().sort((a, b)=>a.x - b.x);\n        const pointsY = points.slice().sort((a, b)=>a.y - b.y);\n        closestPairRec(pointsX, pointsY, null, null);\n    };\n    const distance = (p1, p2)=>Math.sqrt((p1.x - p2.x) ** 2 + (p1.y - p2.y) ** 2);\n    const drawBoundary = (x)=>{\n        const xExtent = d3__WEBPACK_IMPORTED_MODULE_2__.extent(points, (d)=>d.x);\n        const yExtent = d3__WEBPACK_IMPORTED_MODULE_2__.extent(points, (d)=>d.y);\n        // Define scales\n        xScale = d3__WEBPACK_IMPORTED_MODULE_2__.scaleLinear().domain([\n            xExtent[0] - 10,\n            xExtent[1] + 10\n        ]) // Add padding\n        .range([\n            margin.left,\n            svgWidth - margin.right\n        ]);\n        yScale = d3__WEBPACK_IMPORTED_MODULE_2__.scaleLinear().domain([\n            yExtent[0] - 10,\n            yExtent[1] + 10\n        ]) // Add padding\n        .range([\n            svgHeight - margin.bottom,\n            margin.top\n        ]);\n        // Apply the scale to the x value to get the pixel position\n        const xScaled = xScale(x);\n        return d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current).append('line').attr('x1', xScaled).attr('y1', 0).attr('x2', xScaled).attr('y2', svgHeight).attr('class', 'division-line').attr('stroke', 'gray');\n    };\n    // Function to draw a pair of points with distance line\n    const drawPair = (pair)=>{\n        const xExtent = d3__WEBPACK_IMPORTED_MODULE_2__.extent(points, (d)=>d.x);\n        const yExtent = d3__WEBPACK_IMPORTED_MODULE_2__.extent(points, (d)=>d.y);\n        // Define scales\n        xScale = d3__WEBPACK_IMPORTED_MODULE_2__.scaleLinear().domain([\n            xExtent[0] - 10,\n            xExtent[1] + 10\n        ]) // Add padding\n        .range([\n            margin.left,\n            svgWidth - margin.right\n        ]);\n        yScale = d3__WEBPACK_IMPORTED_MODULE_2__.scaleLinear().domain([\n            yExtent[0] - 10,\n            yExtent[1] + 10\n        ]) // Add padding\n        .range([\n            svgHeight - margin.bottom,\n            margin.top\n        ]);\n        // Scale the coordinates of the points using xScale and yScale\n        const x1 = xScale(pair[0].x); // Map x1 to pixel value\n        const y1 = yScale(pair[0].y); // Map y1 to pixel value\n        const x2 = xScale(pair[1].x); // Map x2 to pixel value\n        const y2 = yScale(pair[1].y); // Map y2 to pixel value\n        // Calculate the distance between the two points\n        const dist = Math.sqrt((pair[0].x - pair[1].x) ** 2 + (pair[0].y - pair[1].y) ** 2).toFixed(2);\n        const group = d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current).append('g').attr('class', 'pair-group');\n        // Append the line element between points\n        group.append('line').attr('x1', x1).attr('y1', y1).attr('x2', x2).attr('y2', y2).attr('class', 'pair-line').attr('stroke', 'blue').attr('stroke-width', 2);\n        // Calculate midpoint for the distance label\n        const midX = (x1 + x2) / 2;\n        const midY = (y1 + y2) / 2;\n        // Append the distance label\n        group.append('text').attr('x', midX).attr('y', midY - 5) // Position slightly above the midpoint\n        .attr('class', 'distance-label').attr('text-anchor', 'middle').attr('fill', 'red').text(\"Dist: \".concat(dist));\n        return group;\n    };\n    // Function to highlight a subproblem area\n    const highlightSubproblem = (xStart, xEnd, className)=>{\n        const xExtent = d3__WEBPACK_IMPORTED_MODULE_2__.extent(points, (d)=>d.x);\n        const yExtent = d3__WEBPACK_IMPORTED_MODULE_2__.extent(points, (d)=>d.y);\n        // Define scales\n        xScale = d3__WEBPACK_IMPORTED_MODULE_2__.scaleLinear().domain([\n            xExtent[0] - 10,\n            xExtent[1] + 10\n        ]) // Add padding\n        .range([\n            margin.left,\n            svgWidth - margin.right\n        ]);\n        yScale = d3__WEBPACK_IMPORTED_MODULE_2__.scaleLinear().domain([\n            yExtent[0] - 10,\n            yExtent[1] + 10\n        ]) // Add padding\n        .range([\n            svgHeight - margin.bottom,\n            margin.top\n        ]);\n        const xStartScaled = xScale(xStart); // Apply the scale to xStart\n        const xEndScaled = xScale(xEnd); // Apply the scale to xEnd\n        return d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current).append('rect').attr('x', xStartScaled).attr('y', 0).attr('width', Math.max(0, xEndScaled - xStartScaled)).attr('height', svgHeight).attr('class', className);\n    };\n    const bruteForce = (points)=>{\n        let minDist = Infinity;\n        let closestPair = [];\n        for(let i = 0; i < points.length; ++i){\n            for(let j = i + 1; j < points.length; ++j){\n                let dist = distance(points[i], points[j]);\n                if (dist < minDist) {\n                    minDist = dist;\n                    closestPair = [\n                        points[i],\n                        points[j]\n                    ];\n                }\n            }\n        }\n        return closestPair;\n    };\n    const closestPairRec = async (pointsX, pointsY, leftBoundary, rightBoundary)=>{\n        const subproblem = highlightSubproblem(leftBoundary, rightBoundary, 'subproblem');\n        await new Promise((resolve)=>setTimeout(resolve, duration));\n        if (pointsX.length <= 3) {\n            const closestPair = bruteForce(pointsX);\n            const pair = drawPair(closestPair);\n            await new Promise((resolve)=>setTimeout(resolve, duration));\n            subproblem.remove();\n            return [\n                closestPair,\n                pair\n            ];\n        }\n        const midIdx = Math.floor(pointsX.length / 2);\n        const midPoint = pointsX[midIdx];\n        const midPointX = pointsX[midIdx].x;\n        const boundary = drawBoundary(midPointX);\n        await new Promise((resolve)=>setTimeout(resolve, duration));\n        subproblem.remove();\n        const leftSubproblemRightBoundary = midPointX;\n        const leftSubproblemLeftBoundary = leftBoundary !== null ? leftBoundary : pointsX[0].x;\n        const [pairLeft, leftLine] = await closestPairRec(pointsX.slice(0, midIdx), pointsY.filter((p)=>p.x < midPointX), leftSubproblemLeftBoundary, leftSubproblemRightBoundary);\n        const rightSubproblemLeftBoundary = midPointX;\n        const rightSubproblemRightBoundary = rightBoundary !== null ? rightBoundary : pointsX[pointsX.length - 1].x;\n        const [pairRight, rightLine] = await closestPairRec(pointsX.slice(midIdx), pointsY.filter((p)=>p.x >= midPointX), rightSubproblemLeftBoundary, rightSubproblemRightBoundary);\n        const leftBlock = highlightSubproblem(leftSubproblemLeftBoundary, leftSubproblemRightBoundary, 'left-right');\n        const rightBlock = highlightSubproblem(rightSubproblemLeftBoundary, rightSubproblemRightBoundary, 'left-right');\n        await new Promise((resolve)=>setTimeout(resolve, duration));\n        let closestPair = pairLeft;\n        let bestLine = leftLine;\n        let notBestLine = rightLine;\n        let minDist = distance(pairLeft[0], pairLeft[1]);\n        if (minDist > distance(pairRight[0], pairRight[1])) {\n            minDist = distance(pairRight[0], pairRight[1]);\n            closestPair = pairRight;\n            bestLine = rightLine;\n            notBestLine = leftLine;\n        }\n        notBestLine.remove();\n        await new Promise((resolve)=>setTimeout(resolve, duration));\n        const stripLeft = midPoint.x - minDist;\n        const stripRight = midPoint.x + minDist;\n        const stripBlock = highlightSubproblem(stripLeft, stripRight, 'strip');\n        await new Promise((resolve)=>setTimeout(resolve, duration));\n        //let changed = false;\n        const strip = pointsY.filter((p)=>Math.abs(p.x - midPoint.x) < minDist).sort((a, b)=>a.y - b.y);\n        ;\n        for(let i = 0; i < strip.length; ++i){\n            for(let j = i + 1; j < strip.length && strip[j].y - strip[i].y < minDist; ++j){\n                if (distance(strip[i], strip[j]) < minDist) {\n                    minDist = distance(strip[i], strip[j]);\n                    closestPair = [\n                        strip[i],\n                        strip[j]\n                    ];\n                    changed = true;\n                }\n            }\n        }\n        if (changed) {\n            leftLine.remove();\n            rightLine.remove();\n            bestLine = drawPair(closestPair);\n            await new Promise((resolve)=>setTimeout(resolve, duration));\n        }\n        leftBlock.remove();\n        rightBlock.remove();\n        boundary.remove();\n        stripBlock.remove();\n        await new Promise((resolve)=>setTimeout(resolve, duration));\n        return [\n            closestPair,\n            bestLine\n        ];\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                        type: \"file\",\n                        onChange: handleFileUpload\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\aniqa\\\\OneDrive\\\\Desktop\\\\Divide_and_Conquer\\\\app\\\\ClosestPair.js\",\n                        lineNumber: 340,\n                        columnNumber: 7\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: clearButtonClicked,\n                        children: \"Clear\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\aniqa\\\\OneDrive\\\\Desktop\\\\Divide_and_Conquer\\\\app\\\\ClosestPair.js\",\n                        lineNumber: 341,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: runButtonClicked,\n                        children: \"Run\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\aniqa\\\\OneDrive\\\\Desktop\\\\Divide_and_Conquer\\\\app\\\\ClosestPair.js\",\n                        lineNumber: 342,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: togglePause,\n                        children: isPaused ? 'Resume' : 'Pause'\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\aniqa\\\\OneDrive\\\\Desktop\\\\Divide_and_Conquer\\\\app\\\\ClosestPair.js\",\n                        lineNumber: 343,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\aniqa\\\\OneDrive\\\\Desktop\\\\Divide_and_Conquer\\\\app\\\\ClosestPair.js\",\n                lineNumber: 339,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                id: \"tooltip\",\n                style: {\n                    position: 'absolute',\n                    background: 'lightgray',\n                    padding: '5px',\n                    opacity: 0\n                }\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\aniqa\\\\OneDrive\\\\Desktop\\\\Divide_and_Conquer\\\\app\\\\ClosestPair.js\",\n                lineNumber: 345,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                ref: svgRef,\n                width: svgWidth,\n                height: svgHeight\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\aniqa\\\\OneDrive\\\\Desktop\\\\Divide_and_Conquer\\\\app\\\\ClosestPair.js\",\n                lineNumber: 346,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\aniqa\\\\OneDrive\\\\Desktop\\\\Divide_and_Conquer\\\\app\\\\ClosestPair.js\",\n        lineNumber: 338,\n        columnNumber: 5\n    }, this);\n}\n_s(Home, \"ZEzYtPZPLu9qDrMfh/UI/q72+LI=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/ClosestPair.js\n"));

/***/ })

});